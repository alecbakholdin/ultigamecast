package component

import "github.com/labstack/echo/v5"
import "math/rand"
import "ultigamecast/validation"

const idChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHJIKLMNOPQRSTUVWXYZ0123456789"

templ InputWrapperLabel(c echo.Context, name string, id string, label string) {
	<div class={ "flex flex-col gap-0", templ.KV("[&_input]:input-error", !validation.IsFieldValid(c, name)) }>
		<label for={ id } class="label">{ label }</label>
		{ children... }
		@FieldError(c, name)
	</div>
}

templ InputWrapper(c echo.Context, name string) {
	<div class="flex flex-col gap-0">
		{ children... }
		@FieldError(c, name)
	</div>
}

templ FieldError(c echo.Context, name string) {
	if !validation.IsFieldValid(c, name) {
		<span class="text-error text-sm">
			{ validation.GetFieldErrorString(c, name) }
		</span>
	}
}

func getId(attrs templ.Attributes) string {
	if id, ok := attrs["id"].(string); ok && id != "" {
		return id
	} else {
		id = randomId()
		attrs["id"] = id
		return id
	}
}

func randomId() string {
	id := ""
	for range 8 {
		n := rand.Int() % len(idChars)
		id += string(idChars[n])
	}
	return id
}
