package view

import "ultigamecast/modelspb"
import "ultigamecast/view/layout"
import "strings"
import "github.com/labstack/echo/v5"
import "ultigamecast/view/util"
import "ultigamecast/view/icon"
import "ultigamecast/view/component"

templ Team(e echo.Context, team *modelspb.Teams) {
	@layout.Root()
	<div class="w-full flex flex-col">
		<div class="w-full flex items-start gap-4 p-4">
			<img src="https://a.espncdn.com/combiner/i?img=/i/teamlogos/nba/500/gs.png&h=200&w=200" alt={ team.GetName() } class="row-span-full w-20 h-20"/>
			<div class="flex flex-col justify-between flex-grow">
				<span class="text-3xl">
					{ strings.ToUpper(team.GetName()) }
				</span>
				if team.GetOrganization() != "" {
					<span class="text-xl text-gray-400">
						{ team.GetOrganization() }
					</span>
				}
			</div>
			<div class="h-full flex items-center">
				<div class="dropdown dropdown-end">
					<div tabindex="0" role="button" class="btn m-1">
						@icon.VerticalDots()
					</div>
					<ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52">
						<li>
							<a
								hx-get={ util.JoinSlugsString("/team", team, "edit") }
								hx-target="#team_modal_content"
								hx-swap="innerHTML"
								class="flex items-center gap-2"
							>
								@icon.HtmxLoading(icon.Edit(), icon.LoadingXs())
								<span>Edit Team</span>
							</a>
						</li>
						<li class="hidden"> // TODO: finish editing teams. Working with files is hard so don't wanna do it right now...
							<a
								hx-get={ util.JoinSlugsString("/team", team, "manageRoster") }
								hx-target="#team_modal_content"
								hx-swap="innerHTML"
								class="flex items-center gap-2"
							>
								@icon.HtmxLoading(icon.Person(), icon.LoadingXs())
								<span>Manage Roster</span>
							</a>
						</li>
					</ul>
				</div>
			</div>
		</div>
		<div hx-get={ string(util.JoinSlugs("/team", team, "tournaments")) } hx-trigger="load" hx-target="this" hx-swap="innerHTML"></div>
		<dialog id="team_modal" class="modal" hx-on::after-settle="this.showModal()" hx-on:formsuccess="this.close()">
			<div id="team_modal_content" class="modal-box"></div>
			<form method="dialog" class="modal-backdrop"><button>close</button></form>
		</dialog>
	</div>
}

type TeamData struct {
	TeamID           string
	TeamSlug         string
	TeamLogo         string
	TeamName         string
	TeamOrganization string
}

templ EditTeamDialogContent(c echo.Context, data TeamData) {
	<div id="team_dialog_content">
		<form
			hx-put={ util.JoinSlugsString("/team", c.PathParam("teamSlug")) }
			hx-target="this"
			hx-swap="outerHTML"
			enctype="multipart/form-data"
			class="[&_input]:w-full"
		>
			@component.InputWrapper(c, "logo") {
				<input
					id="team_dialog_logo"
					type="file"
					name="logo"
					placeholder="Logo"
					class="file-input max-w-xs"
				/>
			}
			@component.InputWrapperLabel(c, "name", "team_dialog_name", "Name") {
				<input
					id="team_dialog_name"
					type="text"
					class="input input-bordered"
					placeholder="Name"
					name="name"
					value={ data.TeamName }
				/>
			}
			@component.InputWrapperLabel(c, "slug", "team_dialog_slug", "URL") {
				<input
					id="team_dialog_slug"
					type="text"
					class="input input-bordered"
					placeholder="URL"
					name="slug"
					value={ data.TeamSlug }
				/>
			}
			@component.InputWrapperLabel(c, "organization", "team_dialog_organization", "Organization") {
				<input
					id="team_dialog_organization"
					type="text"
					class="input input-bordered"
					placeholder="Organization"
					name="organization"
					value={ data.TeamOrganization }
				/>
			}
		</form>
	</div>
}
