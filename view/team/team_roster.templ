package view

import "ultigamecast/modelspb"
import "github.com/labstack/echo/v5"
import "ultigamecast/view/util"
import "strconv"
import "fmt"
import "ultigamecast/view/icon"

templ TeamRoster(e echo.Context, teamSlug string) {
	<div role="tablist" class="tabs tabs-bordered" aria-controls="tab-content">
		<button hx-get={ util.JoinSlugsString("/team", teamSlug, "tournaments") } role="tab" aria-controls="tab-content" aria-selected="false" class="tab">Tournaments</button>
		<button hx-get={ util.JoinSlugsString("/team", teamSlug, "roster") } role="tab" aria-controls="tab-content" aria-selected="false" class="tab tab-active">Roster</button>
	</div>
	<div
		id="roster_table"
		hx-get={ util.JoinSlugsString("/team", teamSlug, "rosterTable") }
		hx-trigger="load"
		hx-target="this"
		hx-swap="outerHTML"
		class="flex flex-col gap-2 items-center text-primary pt-8"
	>
		@icon.LoadingLg()
		<span>Loading stats...</span>
	</div>
	<dialog class="modal" id="player_modal" hx-on::afterSwap="this.showModal()" hx-on:formsuccess="setTimeout(() => this.close())">
		<div id="player_modal_content"></div>
		<form method="dialog" class="modal-backdrop"><button>close</button></form>
	</dialog>
}

templ RosterTable(teamSlug string, summaryType string, players []modelspb.PlayerSummary, orderByField string, orderByAsc bool) {
	<div id="roster_table" class="overflow-x-auto">
		<table class="table table-zebra table-pin-rows">
			<thead>
				<tr>
					@rosterTableColumnnHeader(teamSlug, "Name", "player_name", orderByField == "player_name", orderByAsc)
					@rosterTableColumnnHeader(teamSlug, "Points", "points", orderByField == "points", orderByAsc)
					@rosterTableColumnnHeader(teamSlug, "Goals", "goals", orderByField == "goals", orderByAsc)
					@rosterTableColumnnHeader(teamSlug, "Assists", "assists", orderByField == "assists", orderByAsc)
					@rosterTableColumnnHeader(teamSlug, "Turns", "turns", orderByField == "turns", orderByAsc)
					@rosterTableColumnnHeader(teamSlug, "Drops", "drops", orderByField == "drops", orderByAsc)
					<th></th>
				</tr>
			</thead>
			<tbody>
				for _, player := range players {
					@PlayerSummaryRow(summaryType, player)
				}
			</tbody>
		</table>
	</div>
}

templ PlayerSummaryRow(summaryType string, player modelspb.PlayerSummary) {
	<tr
		id={ fmt.Sprintf("player_%s", player.GetPlayerId()) }
	>
		<td>
			<div class="flex items-center gap-1">
				if summaryType == "team" {
					<button></button>
				}
				{ player.GetPlayerName() }
			</div>
		</td>
		<td>{ strconv.Itoa(player.GetPoints()) }</td>
		<td>{ strconv.Itoa(player.GetGoals()) }</td>
		<td>{ strconv.Itoa(player.GetAssists()) }</td>
		<td>{ strconv.Itoa(player.GetTurns()) }</td>
		<td>{ strconv.Itoa(player.GetDrops()) }</td>
	</tr>
}

templ rosterTableColumnnHeader(teamSlug string, title string, field string, isOrderedBy bool, orderByAsc bool) {
	<th
		if isOrderedBy && orderByAsc {
			hx-get={ util.JoinSlugsString("/team", teamSlug, "rosterTable") + fmt.Sprintf("?orderby=%s&dir=desc", field) }
		}
		if isOrderedBy && !orderByAsc {
			hx-get={ util.JoinSlugsString("/team", teamSlug, "rosterTable") }
		}
		if !isOrderedBy {
			hx-get={ util.JoinSlugsString("/team", teamSlug, "rosterTable") + fmt.Sprintf("?orderby=%s&dir=asc", field) }
		}
		hx-target="#roster_table"
		hx-swap="outerHTML"
		role="button"
		class="cursor-pointer"
	>
		<div class="flex items-center gap-1">
			{ title }
			if isOrderedBy && orderByAsc {
				@icon.ChevronUp()
			}
			if isOrderedBy && !orderByAsc {
				@icon.ChevronDown()
			}
		</div>
	</th>
}
