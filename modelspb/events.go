// Code generated by pb-codegen v0.1 DO NOT EDIT.
package modelspb

import (
    "github.com/pocketbase/pocketbase/models"
)

// Events is a wrapper around models.Record for type safe operations on the collection events.
type Events struct {
    Record *models.Record
}

// GetGame returns the value of the "game" field
// Relation collection related : z10vz6vqnt7cvpg
func (m *Events) GetGame() string {
    return m.Record.GetString("game")
}

// SetGame sets the value of the "game" field
// Relation collection related : z10vz6vqnt7cvpg
func (m *Events) SetGame(val string)  {
    m.Record.Set("game", val)
}

// GetPointType returns the value of the "point_type" field
// Possible values: [O D]
func (m *Events) GetPointType() string {
    return m.Record.GetString("point_type")
}

// SetPointType sets the value of the "point_type" field
// Possible values: [O D]
func (m *Events) SetPointType(val string)  {
    m.Record.Set("point_type", val)
}

// GetIsOpponent returns the value of the "is_opponent" field
func (m *Events) GetIsOpponent() bool {
    return m.Record.GetBool("is_opponent")
}

// SetIsOpponent sets the value of the "is_opponent" field
func (m *Events) SetIsOpponent(val bool)  {
    m.Record.Set("is_opponent", val)
}

// GetType returns the value of the "type" field
// Possible values: [Goal Assist Block Turn Drop Point Start Sub In Sub Out Halftime Half Cap Soft Cap Hard Cap Game End]
func (m *Events) GetType() string {
    return m.Record.GetString("type")
}

// SetType sets the value of the "type" field
// Possible values: [Goal Assist Block Turn Drop Point Start Sub In Sub Out Halftime Half Cap Soft Cap Hard Cap Game End]
func (m *Events) SetType(val string)  {
    m.Record.Set("type", val)
}

// GetPlayer returns the value of the "player" field
// Relation collection related : 873174nlwmcn4sh
func (m *Events) GetPlayer() string {
    return m.Record.GetString("player")
}

// SetPlayer sets the value of the "player" field
// Relation collection related : 873174nlwmcn4sh
func (m *Events) SetPlayer(val string)  {
    m.Record.Set("player", val)
}

// GetMessage returns the value of the "message" field
func (m *Events) GetMessage() string {
    return m.Record.GetString("message")
}

// SetMessage sets the value of the "message" field
func (m *Events) SetMessage(val string)  {
    m.Record.Set("message", val)
}
