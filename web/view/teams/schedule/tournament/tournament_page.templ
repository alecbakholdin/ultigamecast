package view_tournament

import "ultigamecast/internal/models"
import "ultigamecast/web/view/layout"
import "ultigamecast/internal/ctxvar"
import "ultigamecast/web/view/component/dto/field"
import "ultigamecast/web/view/component/dto"
import "ultigamecast/web/view/component/dto/field/mod"
import "ultigamecast/web/view/component"

var tabs = []view_component.TabInfo{
	{Title: "Schedule", Icon: "fas fa-calendar-days", UrlSegments: []any{ctxvar.Team, ctxvar.Tournament, "schedule"}},
	{Title: "Info", Icon: "fas fa-circle-info", UrlSegments: []any{ctxvar.Team, ctxvar.Tournament, "info"}},
	{Title: "Statistics", Icon: "fas fa-chart-line", UrlSegments: []any{ctxvar.Team, ctxvar.Tournament, "statistics"}},
}

templ TournamentPage(t *models.Tournament) {
	@view_layout.NavLayout() {
		<section class="section" x-data="{ editing: false }">
			<div class="container flex p-2">
				@Name(t)
			</div>
			@view_component.Tabs(tabs)
		</section>
	}
}

type NameDTO struct {
	dto.DTO
	Name string `validate:"required,max=64,ascii"`
}

templ Name(t *models.Tournament) {
	if ctxvar.IsAdmin(ctx) {
		<a
			hx-get={ ctxvar.Url(ctx, ctxvar.Team, ctxvar.Tournament, "edit?field=Name") }
			hx-target="this"
			hx-swap="outerHTML"
			class="hover-primary-text"
			hx-trigger="edit"
			x-on:click="!editing && htmx.trigger($el, 'edit')"
			x-on:htmx:before-request="editing = true"
			x-on:htmx:after-settle="editing = false"
		>
			<h4 class="is-size-4 underline">{ t.Name }</h4>
		</a>
	} else {
		<h4 class="is-size-4">{ t.Name }</h4>
	}
}

templ NameForm(dto *NameDTO) {
	<div
		hx-target="this"
		hx-swap="outerHTML"
		hx-trigger="cancel"
	>
		<form
			hx-put={ ctxvar.Url(ctx, ctxvar.Team, ctxvar.Tournament, "edit?field=Name") }
		>
			@field.Field(dto, "Name",
				mod.FieldNameGuesser(),
				mod.IncludeButtons(),
				mod.Value(dto.Name),
				mod.IncludeFormError(),
				mod.Autofocus(),
				mod.Autocomplete("off"),
				mod.FieldSizeMedium(),
				mod.IconLeft("fa-t"),
			)
		</form>
	</div>
}
