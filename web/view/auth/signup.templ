package view_auth

import "ultigamecast/web/view/layout"
import "ultigamecast/web/view/component/dto"
import "ultigamecast/web/view/component/dto/field"
import "ultigamecast/web/view/component/dto/field/mod"

type SignUpDTO struct {
	dto.DTO
	Email           string `validate:"email,required"`
	Password        string `validate:"required,min=8,max=64"`
	ConfirmPassword string `validate:"required,eqcsfield=Password"`
}

templ SignUpPage() {
	@view_layout.NavLayout() {
		<section class="section">
			<div class="container !max-w-md">
				<h4 class="is-size-4 font-bold">Log In</h4>
				@SignUpForm(&SignUpDTO{})
				<div class="mt-2">
					Already have an account? Log in <a href="/login" class="has-text-link">here</a>
				</div>
			</div>
		</section>
	}
}

templ SignUpForm(dto *SignUpDTO) {
	<form
		hx-post="/signup"
		hx-swap="outerHTML"
		hx-disabled-elt="button"
	>
		@field.Field(dto, "Email",
			mod.FieldNameGuesser(),
			mod.InputTypeEmail(),
			mod.Autocomplete("email"),
			mod.IconLeft("fa-envelope"),
		)
		@field.Field(dto, "Password",
			mod.FieldNameGuesser(),
			mod.FieldSizeMedium(),
			mod.InputTypePassword(),
			mod.IconLeft("fa-lock"),
			mod.Autocomplete("new-password"),
		)
		@field.Field(dto, "ConfirmPassword",
			mod.FieldNameGuesser(),
			mod.FieldSizeMedium(),
			mod.InputTypePassword(),
			mod.IconLeft("fa-lock"),
			mod.Autocomplete("new-password"),
		)
		<button class="button htmx-loading is-medium is-fullwidth is-primary">
			<span class="icon is-large"><i class="fas fa-check fa-lg"></i></span>
			<span>Submit</span>
		</button>
		<div class="block">
			<span class="has-text-danger">{ dto.FormError() }</span>
		</div>
	</form>
}
