package field

templ Field(dto FormFieldErrorAccessor, dtoField string, modifiers ...Modifier) {
	@FieldFromConfig(NewFieldConfig(dto, dtoField, modifiers...))
}

templ FieldFromConfig(fc *FieldConfig) {
	<div class={ "field", templ.KV("has-addons flex-wrap", fc.IncludeButtons) } x-id="['input']">
		if fc.Label != "" && !fc.IncludeButtons {
			<label class="label level justify-start" :for="$id('input')">
				<span>{ fc.Label }</span>
				if fc.TooltipHelpText != "" {
					<span class="icon" data-tooltip={ fc.TooltipHelpText }><i class="fa-regular fa-circle-question"></i></span>
				}
			</label>
		}
		<div class={ "control", fc.LeftIconClass(), fc.RightIconClass() }>
			<input
				:id="$id('input')"
				class={ "input", string(fc.FieldColor), string(fc.Size) }
				{ fc.InputAttributes... }
			/>
			if fc.FaLeftIcon != "" {
				<span class={ "icon is-left", string(fc.IconSize), string(fc.LeftIconColor) }>
					<i class={ "fas", string(fc.FaLeftIcon), string(fc.FaIconSize) }></i>
				</span>
			}
			if fc.FaRightIcon != "" {
				<span class={ "icon is-right", string(fc.IconSize), string(fc.RightIconColor) }>
					<i class={ "fas", string(fc.FaRightIcon), string(fc.FaIconSize) }></i>
				</span>
			}
		</div>
		if fc.IncludeButtons {
			<div class="control">
				<button class={ "button htmx-loading", string(fc.Size) } type="button" hx-on:click="htmx.trigger(this, 'cancel')">
					<span class={ "icon", string(fc.IconSize) }>
						<i class={ "fas fa-xmark", string(fc.FaIconSize) }></i>
					</span>
				</button>
			</div>
			<div class="control">
				<button class={ "button is-primary htmx-loading", string(fc.Size) }>
					<span class={ "icon", string(fc.IconSize) }>
						<i class={ "fas fa-check", string(fc.FaIconSize) }></i>
					</span>
				</button>
			</div>
		}
		if fc.HelpText != "" {
			if fc.IncludeButtons {
				<p class="basis-full h-0"></p>
			}
			<p class={ "help", string(fc.HelpTextColor) }>
				{ fc.HelpText }
			</p>
		}
	</div>
}
